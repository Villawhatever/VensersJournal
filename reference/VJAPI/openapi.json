{
  "openapi": "3.0.0",
  "info": {
    "title": "VJAPI",
    "version": "0.9-ELD",
    "description": "Developing a Magic rules API that fits consumers' needs. Currently supporting rulesguru.net and the Fryatog IRC bot projects.",
    "contact": {
      "name": "Andrew Villarrubia",
      "url": "https://vensersjournal.com",
      "email": "andrew@primefour.com"
    }
  },
  "servers": [
    {
      "url": "https://slack.vensersjournal.com"
    }
  ],
  "paths": {
    "/rule/{ruleNumber}": {
      "get": {
        "summary": "Rules",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK: The request found a valid rule number",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP request status (200)"
                    },
                    "ruleNumber": {
                      "type": "string",
                      "description": "The requested ruleNumber"
                    },
                    "ruleText": {
                      "type": "string",
                      "description": "Full rule text of requested rule. Some rules (e.g. `205.3i`) have had line breaks removed."
                    }
                  }
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "Not Found: The requested rule doesn't exist in the API at all (e.g. `104.3q`).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP request status (404)"
                    },
                    "ruleNumber": {
                      "type": "string",
                      "description": "The requested ruleNumber"
                    },
                    "ruleText": {
                      "type": "string",
                      "description": "Always `\"Rule not found\"`"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Requests the rules text of a specific rule. Rule headers (e.g. `701. Keyword Actions`) are not returned.",
        "requestBody": {}
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "ruleNumber",
          "in": "path",
          "required": true
        }
      ]
    },
    "/example/{ruleNumber}": {
      "get": {
        "summary": "Examples",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK: The request found a valid rule number, regardless of whether or not the rule actually has examples or not.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "description": "HTTP request status (200)"
                    },
                    "ruleNumber": {
                      "type": "string",
                      "description": "The requested ruleNumber"
                    },
                    "exampleText": {
                      "type": "string",
                      "description": "`\\n`-joined list of examples, or, if no examples exist, `null`\nDo note that each example includes the leading `Example: ` text."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The requested rule doesn't exist in the API at all (e.g. `104.3q`).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "HTTP request status (404)"
                    },
                    "ruleNumber": {
                      "type": "string",
                      "description": "The requested ruleNumber"
                    },
                    "exampleText": {
                      "type": "string",
                      "description": "Always `\"Rule not found\"`"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Requests any examples for a specific rule."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "ruleNumber",
          "in": "path",
          "required": true
        }
      ]
    },
    "/allrules": {
      "get": {
        "summary": "Complete Comprehensive Rules",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "examples": {
                        "type": "string",
                        "description": "`\\n`-joined list of Examples if they exist, `null` otherwise"
                      },
                      "ruleText": {
                        "type": "string",
                        "description": "The full rules text for this rule. Editorial line breaks (e.g. `205.3i`) are removed."
                      },
                      "ruleNumber": {
                        "type": "string",
                        "description": "This rule's ruleNumber"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Requests the entire body of the Comprehensive Rules. This returns an *array of rules* structured as `{ ruleNumber: { examples, ruleText, ruleNumber } }`.\n\n`examples` are null if the rule doesn't have any; otherwise, it's an `\\n`-joined list of examples.    "
      }
    }
  }
}